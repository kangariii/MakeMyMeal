{"ast":null,"code":"var _jsxFileName = \"/Users/michaelsoni/Desktop/Food App/src/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [ingredients, setIngredients] = useState([]);\n  const [currentIngredient, setCurrentIngredient] = useState('');\n  const [recipes, setRecipes] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Sample recipe database\n  const recipeDatabase = [{\n    name: 'Pasta Aglio e Olio',\n    ingredients: ['pasta', 'garlic', 'olive oil', 'red pepper flakes', 'parsley'],\n    instructions: 'Boil pasta. Sauté garlic in olive oil. Add red pepper flakes. Toss with pasta and garnish with parsley.'\n  }, {\n    name: 'Scrambled Eggs',\n    ingredients: ['eggs', 'butter', 'salt', 'pepper'],\n    instructions: 'Whisk eggs. Melt butter in pan. Cook eggs on low heat, stirring constantly.'\n  }, {\n    name: 'Tomato Soup',\n    ingredients: ['tomatoes', 'onion', 'garlic', 'vegetable broth', 'olive oil', 'salt', 'pepper'],\n    instructions: 'Sauté onion and garlic. Add tomatoes and broth. Simmer. Blend until smooth.'\n  }, {\n    name: 'Grilled Cheese Sandwich',\n    ingredients: ['bread', 'cheese', 'butter'],\n    instructions: 'Butter bread. Add cheese between slices. Grill until golden and cheese melts.'\n  }, {\n    name: 'Avocado Toast',\n    ingredients: ['bread', 'avocado', 'salt', 'pepper', 'olive oil'],\n    instructions: 'Toast bread. Mash avocado with salt, pepper, and olive oil. Spread on toast.'\n  }, {\n    name: 'Vegetable Stir Fry',\n    ingredients: ['rice', 'bell pepper', 'broccoli', 'carrot', 'soy sauce', 'garlic', 'ginger', 'vegetable oil'],\n    instructions: 'Cook rice. Stir fry vegetables with garlic and ginger. Add soy sauce. Serve over rice.'\n  }, {\n    name: 'Banana Smoothie',\n    ingredients: ['banana', 'milk', 'yogurt', 'honey', 'ice'],\n    instructions: 'Blend all ingredients until smooth.'\n  }, {\n    name: 'Guacamole',\n    ingredients: ['avocado', 'onion', 'tomato', 'lime', 'salt', 'cilantro', 'garlic'],\n    instructions: 'Mash avocados. Mix in diced onion, tomato, minced garlic, lime juice, salt, and cilantro.'\n  }];\n  const addIngredient = () => {\n    if (currentIngredient.trim() !== '' && !ingredients.includes(currentIngredient.trim().toLowerCase())) {\n      setIngredients([...ingredients, currentIngredient.trim().toLowerCase()]);\n      setCurrentIngredient('');\n    }\n  };\n  const removeIngredient = ingredient => {\n    setIngredients(ingredients.filter(item => item !== ingredient));\n  };\n  const findRecipes = () => {\n    setLoading(true);\n\n    // Simulate API call with a timeout\n    setTimeout(() => {\n      if (ingredients.length === 0) {\n        setRecipes([]);\n        setLoading(false);\n        return;\n      }\n\n      // Find recipes that have at least one matching ingredient\n      const matchedRecipes = recipeDatabase.filter(recipe => {\n        const matchCount = recipe.ingredients.filter(ingredient => ingredients.some(userIngredient => ingredient.toLowerCase().includes(userIngredient.toLowerCase()) || userIngredient.toLowerCase().includes(ingredient.toLowerCase()))).length;\n\n        // Return true if at least half of user's ingredients are used\n        // or if all ingredients in the recipe are available\n        return matchCount >= Math.min(ingredients.length * 0.5, recipe.ingredients.length);\n      });\n\n      // Sort by match quality (number of matching ingredients)\n      matchedRecipes.sort((a, b) => {\n        const aMatches = a.ingredients.filter(ingredient => ingredients.some(userIngredient => ingredient.toLowerCase().includes(userIngredient.toLowerCase()) || userIngredient.toLowerCase().includes(ingredient.toLowerCase()))).length;\n        const bMatches = b.ingredients.filter(ingredient => ingredients.some(userIngredient => ingredient.toLowerCase().includes(userIngredient.toLowerCase()) || userIngredient.toLowerCase().includes(ingredient.toLowerCase()))).length;\n        return bMatches - aMatches;\n      });\n      setRecipes(matchedRecipes);\n      setLoading(false);\n    }, 500);\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      addIngredient();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"What's in Your Pantry?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ingredient-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: currentIngredient,\n        onChange: e => setCurrentIngredient(e.target.value),\n        onKeyDown: handleKeyDown,\n        placeholder: \"Enter an ingredient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addIngredient,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ingredients-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Ingredients:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), ingredients.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No ingredients added yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [ingredient, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeIngredient(ingredient),\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"find-recipes-btn\",\n        onClick: findRecipes,\n        disabled: ingredients.length === 0,\n        children: \"Find Recipes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipes-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recipe Suggestions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Finding recipes...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this) : recipes.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No recipes found. Try adding more ingredients!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipes-grid\",\n        children: recipes.map((recipe, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: recipe.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recipe-ingredients\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Ingredients:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: recipe.ingredients.map((ingredient, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: ingredients.some(userIng => ingredient.toLowerCase().includes(userIng.toLowerCase()) || userIng.toLowerCase().includes(ingredient.toLowerCase())) ? 'available' : 'missing',\n                children: ingredient\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recipe-instructions\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Instructions:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: recipe.instructions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VBTZKIG5mKpeak/yZlE2CAa94j0=\");\n_c = App;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 197,\n  columnNumber: 3\n}, this));\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ReactDOM","jsxDEV","_jsxDEV","App","_s","ingredients","setIngredients","currentIngredient","setCurrentIngredient","recipes","setRecipes","loading","setLoading","recipeDatabase","name","instructions","addIngredient","trim","includes","toLowerCase","removeIngredient","ingredient","filter","item","findRecipes","setTimeout","length","matchedRecipes","recipe","matchCount","some","userIngredient","Math","min","sort","a","b","aMatches","bMatches","handleKeyDown","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","onKeyDown","placeholder","onClick","map","index","disabled","i","userIng","_c","root","createRoot","document","getElementById","render","StrictMode","$RefreshReg$"],"sources":["/Users/michaelsoni/Desktop/Food App/src/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\n\nfunction App() {\n  const [ingredients, setIngredients] = useState([]);\n  const [currentIngredient, setCurrentIngredient] = useState('');\n  const [recipes, setRecipes] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Sample recipe database\n  const recipeDatabase = [\n    {\n      name: 'Pasta Aglio e Olio',\n      ingredients: ['pasta', 'garlic', 'olive oil', 'red pepper flakes', 'parsley'],\n      instructions: 'Boil pasta. Sauté garlic in olive oil. Add red pepper flakes. Toss with pasta and garnish with parsley.'\n    },\n    {\n      name: 'Scrambled Eggs',\n      ingredients: ['eggs', 'butter', 'salt', 'pepper'],\n      instructions: 'Whisk eggs. Melt butter in pan. Cook eggs on low heat, stirring constantly.'\n    },\n    {\n      name: 'Tomato Soup',\n      ingredients: ['tomatoes', 'onion', 'garlic', 'vegetable broth', 'olive oil', 'salt', 'pepper'],\n      instructions: 'Sauté onion and garlic. Add tomatoes and broth. Simmer. Blend until smooth.'\n    },\n    {\n      name: 'Grilled Cheese Sandwich',\n      ingredients: ['bread', 'cheese', 'butter'],\n      instructions: 'Butter bread. Add cheese between slices. Grill until golden and cheese melts.'\n    },\n    {\n      name: 'Avocado Toast',\n      ingredients: ['bread', 'avocado', 'salt', 'pepper', 'olive oil'],\n      instructions: 'Toast bread. Mash avocado with salt, pepper, and olive oil. Spread on toast.'\n    },\n    {\n      name: 'Vegetable Stir Fry',\n      ingredients: ['rice', 'bell pepper', 'broccoli', 'carrot', 'soy sauce', 'garlic', 'ginger', 'vegetable oil'],\n      instructions: 'Cook rice. Stir fry vegetables with garlic and ginger. Add soy sauce. Serve over rice.'\n    },\n    {\n      name: 'Banana Smoothie',\n      ingredients: ['banana', 'milk', 'yogurt', 'honey', 'ice'],\n      instructions: 'Blend all ingredients until smooth.'\n    },\n    {\n      name: 'Guacamole',\n      ingredients: ['avocado', 'onion', 'tomato', 'lime', 'salt', 'cilantro', 'garlic'],\n      instructions: 'Mash avocados. Mix in diced onion, tomato, minced garlic, lime juice, salt, and cilantro.'\n    }\n  ];\n\n  const addIngredient = () => {\n    if (currentIngredient.trim() !== '' && !ingredients.includes(currentIngredient.trim().toLowerCase())) {\n      setIngredients([...ingredients, currentIngredient.trim().toLowerCase()]);\n      setCurrentIngredient('');\n    }\n  };\n\n  const removeIngredient = (ingredient) => {\n    setIngredients(ingredients.filter(item => item !== ingredient));\n  };\n\n  const findRecipes = () => {\n    setLoading(true);\n    \n    // Simulate API call with a timeout\n    setTimeout(() => {\n      if (ingredients.length === 0) {\n        setRecipes([]);\n        setLoading(false);\n        return;\n      }\n\n      // Find recipes that have at least one matching ingredient\n      const matchedRecipes = recipeDatabase.filter(recipe => {\n        const matchCount = recipe.ingredients.filter(ingredient => \n          ingredients.some(userIngredient => \n            ingredient.toLowerCase().includes(userIngredient.toLowerCase()) || \n            userIngredient.toLowerCase().includes(ingredient.toLowerCase())\n          )\n        ).length;\n        \n        // Return true if at least half of user's ingredients are used\n        // or if all ingredients in the recipe are available\n        return matchCount >= Math.min(ingredients.length * 0.5, recipe.ingredients.length);\n      });\n\n      // Sort by match quality (number of matching ingredients)\n      matchedRecipes.sort((a, b) => {\n        const aMatches = a.ingredients.filter(ingredient => \n          ingredients.some(userIngredient => \n            ingredient.toLowerCase().includes(userIngredient.toLowerCase()) || \n            userIngredient.toLowerCase().includes(ingredient.toLowerCase())\n          )\n        ).length;\n        \n        const bMatches = b.ingredients.filter(ingredient => \n          ingredients.some(userIngredient => \n            ingredient.toLowerCase().includes(userIngredient.toLowerCase()) || \n            userIngredient.toLowerCase().includes(ingredient.toLowerCase())\n          )\n        ).length;\n        \n        return bMatches - aMatches;\n      });\n      \n      setRecipes(matchedRecipes);\n      setLoading(false);\n    }, 500);\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      addIngredient();\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <h1>What's in Your Pantry?</h1>\n      <div className=\"ingredient-input\">\n        <input\n          type=\"text\"\n          value={currentIngredient}\n          onChange={(e) => setCurrentIngredient(e.target.value)}\n          onKeyDown={handleKeyDown}\n          placeholder=\"Enter an ingredient\"\n        />\n        <button onClick={addIngredient}>Add</button>\n      </div>\n\n      <div className=\"ingredients-list\">\n        <h2>Your Ingredients:</h2>\n        {ingredients.length === 0 ? (\n          <p>No ingredients added yet</p>\n        ) : (\n          <ul>\n            {ingredients.map((ingredient, index) => (\n              <li key={index}>\n                {ingredient}\n                <button onClick={() => removeIngredient(ingredient)}>✕</button>\n              </li>\n            ))}\n          </ul>\n        )}\n        <button \n          className=\"find-recipes-btn\" \n          onClick={findRecipes}\n          disabled={ingredients.length === 0}\n        >\n          Find Recipes\n        </button>\n      </div>\n\n      <div className=\"recipes-container\">\n        <h2>Recipe Suggestions:</h2>\n        {loading ? (\n          <p>Finding recipes...</p>\n        ) : recipes.length === 0 ? (\n          <p>No recipes found. Try adding more ingredients!</p>\n        ) : (\n          <div className=\"recipes-grid\">\n            {recipes.map((recipe, index) => (\n              <div className=\"recipe-card\" key={index}>\n                <h3>{recipe.name}</h3>\n                <div className=\"recipe-ingredients\">\n                  <h4>Ingredients:</h4>\n                  <ul>\n                    {recipe.ingredients.map((ingredient, i) => (\n                      <li key={i} className={ingredients.some(userIng => \n                        ingredient.toLowerCase().includes(userIng.toLowerCase()) || \n                        userIng.toLowerCase().includes(ingredient.toLowerCase())\n                      ) ? 'available' : 'missing'}>\n                        {ingredient}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n                <div className=\"recipe-instructions\">\n                  <h4>Instructions:</h4>\n                  <p>{recipe.instructions}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,MAAMc,cAAc,GAAG,CACrB;IACEC,IAAI,EAAE,oBAAoB;IAC1BT,WAAW,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,mBAAmB,EAAE,SAAS,CAAC;IAC7EU,YAAY,EAAE;EAChB,CAAC,EACD;IACED,IAAI,EAAE,gBAAgB;IACtBT,WAAW,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,CAAC;IACjDU,YAAY,EAAE;EAChB,CAAC,EACD;IACED,IAAI,EAAE,aAAa;IACnBT,WAAW,EAAE,CAAC,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE,iBAAiB,EAAE,WAAW,EAAE,MAAM,EAAE,QAAQ,CAAC;IAC9FU,YAAY,EAAE;EAChB,CAAC,EACD;IACED,IAAI,EAAE,yBAAyB;IAC/BT,WAAW,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC;IAC1CU,YAAY,EAAE;EAChB,CAAC,EACD;IACED,IAAI,EAAE,eAAe;IACrBT,WAAW,EAAE,CAAC,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,CAAC;IAChEU,YAAY,EAAE;EAChB,CAAC,EACD;IACED,IAAI,EAAE,oBAAoB;IAC1BT,WAAW,EAAE,CAAC,MAAM,EAAE,aAAa,EAAE,UAAU,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,eAAe,CAAC;IAC5GU,YAAY,EAAE;EAChB,CAAC,EACD;IACED,IAAI,EAAE,iBAAiB;IACvBT,WAAW,EAAE,CAAC,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,CAAC;IACzDU,YAAY,EAAE;EAChB,CAAC,EACD;IACED,IAAI,EAAE,WAAW;IACjBT,WAAW,EAAE,CAAC,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,CAAC;IACjFU,YAAY,EAAE;EAChB,CAAC,CACF;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIT,iBAAiB,CAACU,IAAI,CAAC,CAAC,KAAK,EAAE,IAAI,CAACZ,WAAW,CAACa,QAAQ,CAACX,iBAAiB,CAACU,IAAI,CAAC,CAAC,CAACE,WAAW,CAAC,CAAC,CAAC,EAAE;MACpGb,cAAc,CAAC,CAAC,GAAGD,WAAW,EAAEE,iBAAiB,CAACU,IAAI,CAAC,CAAC,CAACE,WAAW,CAAC,CAAC,CAAC,CAAC;MACxEX,oBAAoB,CAAC,EAAE,CAAC;IAC1B;EACF,CAAC;EAED,MAAMY,gBAAgB,GAAIC,UAAU,IAAK;IACvCf,cAAc,CAACD,WAAW,CAACiB,MAAM,CAACC,IAAI,IAAIA,IAAI,KAAKF,UAAU,CAAC,CAAC;EACjE,CAAC;EAED,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACxBZ,UAAU,CAAC,IAAI,CAAC;;IAEhB;IACAa,UAAU,CAAC,MAAM;MACf,IAAIpB,WAAW,CAACqB,MAAM,KAAK,CAAC,EAAE;QAC5BhB,UAAU,CAAC,EAAE,CAAC;QACdE,UAAU,CAAC,KAAK,CAAC;QACjB;MACF;;MAEA;MACA,MAAMe,cAAc,GAAGd,cAAc,CAACS,MAAM,CAACM,MAAM,IAAI;QACrD,MAAMC,UAAU,GAAGD,MAAM,CAACvB,WAAW,CAACiB,MAAM,CAACD,UAAU,IACrDhB,WAAW,CAACyB,IAAI,CAACC,cAAc,IAC7BV,UAAU,CAACF,WAAW,CAAC,CAAC,CAACD,QAAQ,CAACa,cAAc,CAACZ,WAAW,CAAC,CAAC,CAAC,IAC/DY,cAAc,CAACZ,WAAW,CAAC,CAAC,CAACD,QAAQ,CAACG,UAAU,CAACF,WAAW,CAAC,CAAC,CAChE,CACF,CAAC,CAACO,MAAM;;QAER;QACA;QACA,OAAOG,UAAU,IAAIG,IAAI,CAACC,GAAG,CAAC5B,WAAW,CAACqB,MAAM,GAAG,GAAG,EAAEE,MAAM,CAACvB,WAAW,CAACqB,MAAM,CAAC;MACpF,CAAC,CAAC;;MAEF;MACAC,cAAc,CAACO,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAC5B,MAAMC,QAAQ,GAAGF,CAAC,CAAC9B,WAAW,CAACiB,MAAM,CAACD,UAAU,IAC9ChB,WAAW,CAACyB,IAAI,CAACC,cAAc,IAC7BV,UAAU,CAACF,WAAW,CAAC,CAAC,CAACD,QAAQ,CAACa,cAAc,CAACZ,WAAW,CAAC,CAAC,CAAC,IAC/DY,cAAc,CAACZ,WAAW,CAAC,CAAC,CAACD,QAAQ,CAACG,UAAU,CAACF,WAAW,CAAC,CAAC,CAChE,CACF,CAAC,CAACO,MAAM;QAER,MAAMY,QAAQ,GAAGF,CAAC,CAAC/B,WAAW,CAACiB,MAAM,CAACD,UAAU,IAC9ChB,WAAW,CAACyB,IAAI,CAACC,cAAc,IAC7BV,UAAU,CAACF,WAAW,CAAC,CAAC,CAACD,QAAQ,CAACa,cAAc,CAACZ,WAAW,CAAC,CAAC,CAAC,IAC/DY,cAAc,CAACZ,WAAW,CAAC,CAAC,CAACD,QAAQ,CAACG,UAAU,CAACF,WAAW,CAAC,CAAC,CAChE,CACF,CAAC,CAACO,MAAM;QAER,OAAOY,QAAQ,GAAGD,QAAQ;MAC5B,CAAC,CAAC;MAEF3B,UAAU,CAACiB,cAAc,CAAC;MAC1Bf,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,EAAE,GAAG,CAAC;EACT,CAAC;EAED,MAAM2B,aAAa,GAAIC,CAAC,IAAK;IAC3B,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;MACrBzB,aAAa,CAAC,CAAC;IACjB;EACF,CAAC;EAED,oBACEd,OAAA;IAAKwC,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BzC,OAAA;MAAAyC,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/B7C,OAAA;MAAKwC,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BzC,OAAA;QACE8C,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE1C,iBAAkB;QACzB2C,QAAQ,EAAGV,CAAC,IAAKhC,oBAAoB,CAACgC,CAAC,CAACW,MAAM,CAACF,KAAK,CAAE;QACtDG,SAAS,EAAEb,aAAc;QACzBc,WAAW,EAAC;MAAqB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,eACF7C,OAAA;QAAQoD,OAAO,EAAEtC,aAAc;QAAA2B,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,eAEN7C,OAAA;MAAKwC,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BzC,OAAA;QAAAyC,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACzB1C,WAAW,CAACqB,MAAM,KAAK,CAAC,gBACvBxB,OAAA;QAAAyC,QAAA,EAAG;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAE/B7C,OAAA;QAAAyC,QAAA,EACGtC,WAAW,CAACkD,GAAG,CAAC,CAAClC,UAAU,EAAEmC,KAAK,kBACjCtD,OAAA;UAAAyC,QAAA,GACGtB,UAAU,eACXnB,OAAA;YAAQoD,OAAO,EAAEA,CAAA,KAAMlC,gBAAgB,CAACC,UAAU,CAAE;YAAAsB,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAFxDS,KAAK;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CACL,eACD7C,OAAA;QACEwC,SAAS,EAAC,kBAAkB;QAC5BY,OAAO,EAAE9B,WAAY;QACrBiC,QAAQ,EAAEpD,WAAW,CAACqB,MAAM,KAAK,CAAE;QAAAiB,QAAA,EACpC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAEN7C,OAAA;MAAKwC,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChCzC,OAAA;QAAAyC,QAAA,EAAI;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC3BpC,OAAO,gBACNT,OAAA;QAAAyC,QAAA,EAAG;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GACvBtC,OAAO,CAACiB,MAAM,KAAK,CAAC,gBACtBxB,OAAA;QAAAyC,QAAA,EAAG;MAA8C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAErD7C,OAAA;QAAKwC,SAAS,EAAC,cAAc;QAAAC,QAAA,EAC1BlC,OAAO,CAAC8C,GAAG,CAAC,CAAC3B,MAAM,EAAE4B,KAAK,kBACzBtD,OAAA;UAAKwC,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BzC,OAAA;YAAAyC,QAAA,EAAKf,MAAM,CAACd;UAAI;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACtB7C,OAAA;YAAKwC,SAAS,EAAC,oBAAoB;YAAAC,QAAA,gBACjCzC,OAAA;cAAAyC,QAAA,EAAI;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACrB7C,OAAA;cAAAyC,QAAA,EACGf,MAAM,CAACvB,WAAW,CAACkD,GAAG,CAAC,CAAClC,UAAU,EAAEqC,CAAC,kBACpCxD,OAAA;gBAAYwC,SAAS,EAAErC,WAAW,CAACyB,IAAI,CAAC6B,OAAO,IAC7CtC,UAAU,CAACF,WAAW,CAAC,CAAC,CAACD,QAAQ,CAACyC,OAAO,CAACxC,WAAW,CAAC,CAAC,CAAC,IACxDwC,OAAO,CAACxC,WAAW,CAAC,CAAC,CAACD,QAAQ,CAACG,UAAU,CAACF,WAAW,CAAC,CAAC,CACzD,CAAC,GAAG,WAAW,GAAG,SAAU;gBAAAwB,QAAA,EACzBtB;cAAU,GAJJqC,CAAC;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAKN,CACL;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACN7C,OAAA;YAAKwC,SAAS,EAAC,qBAAqB;YAAAC,QAAA,gBAClCzC,OAAA;cAAAyC,QAAA,EAAI;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACtB7C,OAAA;cAAAyC,QAAA,EAAIf,MAAM,CAACb;YAAY;cAAA6B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB,CAAC;QAAA,GAlB0BS,KAAK;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAmBlC,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC3C,EAAA,CA5LQD,GAAG;AAAAyD,EAAA,GAAHzD,GAAG;AA8LZ,MAAM0D,IAAI,GAAG7D,QAAQ,CAAC8D,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cACT/D,OAAA,CAACJ,KAAK,CAACoE,UAAU;EAAAvB,QAAA,eACfzC,OAAA,CAACC,GAAG;IAAAyC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC;AAAC,IAAAa,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}